import React, { useState } from "react";
import { ethers } from "ethers";
import EscrowABI from "../abi/Escrow.json";

// ‚ö†Ô∏è Replace this with the full bytecode from Escrow.json
const ESCROW_BYTECODE = "0x6080604052604051610afb380380610afb83398181016040528101906100259190610141565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346002819055506001600360006101000a81548160ff021916908360038111156100d3576100d261016e565b5b02179055505061019d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010e826100e3565b9050919050565b61011e81610103565b811461012957600080fd5b50565b60008151905061013b81610115565b92915050565b600060208284031215610157576101566100de565b5b60006101658482850161012c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61094f806101ac6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635e10177b1161005b5780635e10177b146100dc57806395a99dc3146100e6578063a37dda2c146100f0578063aa8c217c1461010e5761007d565b80630c3f6acf14610082578063109e94cf146100a05780634e69d560146100be575b600080fd5b61008a61012c565b60405161009791906106e4565b60405180910390f35b6100a861013f565b6040516100b59190610740565b60405180910390f35b6100c6610163565b6040516100d391906107eb565b60405180910390f35b6100e4610308565b005b6100ee6104a6565b005b6100f8610641565b6040516101059190610740565b60405180910390f35b610116610667565b6040516101239190610826565b60405180910390f35b600360009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600160038111156101795761017861066d565b5b600360009054906101000a900460ff16600381111561019b5761019a61066d565b5b036101dd576040518060400160405280601181526020017f4177616974696e672044656c69766572790000000000000000000000000000008152509050610305565b600260038111156101f1576101f061066d565b5b600360009054906101000a900460ff1660038111156102135761021261066d565b5b03610255576040518060400160405280600881526020017f436f6d706c6574650000000000000000000000000000000000000000000000008152509050610305565b6003808111156102685761026761066d565b5b600360009054906101000a900460ff16600381111561028a5761028961066d565b5b036102cc576040518060400160405280600881526020017f526566756e6465640000000000000000000000000000000000000000000000008152509050610305565b6040518060400160405280601081526020017f4177616974696e67205061796d656e740000000000000000000000000000000081525090505b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d9061088d565b60405180910390fd5b60018060038111156103ab576103aa61066d565b5b600360009054906101000a900460ff1660038111156103cd576103cc61066d565b5b1461040d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610404906108f9565b60405180910390fd5b6002600360006101000a81548160ff021916908360038111156104335761043261066d565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156104a2573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b9061088d565b60405180910390fd5b60018060038111156105495761054861066d565b5b600360009054906101000a900460ff16600381111561056b5761056a61066d565b5b146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a2906108f9565b60405180910390fd5b60038060006101000a81548160ff021916908360038111156105d0576105cf61066d565b5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505015801561063d573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106106ad576106ac61066d565b5b50565b60008190506106be8261069c565b919050565b60006106ce826106b0565b9050919050565b6106de816106c3565b82525050565b60006020820190506106f960008301846106d5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061072a826106ff565b9050919050565b61073a8161071f565b82525050565b60006020820190506107556000830184610731565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561079557808201518184015260208101905061077a565b60008484015250505050565b6000601f19601f8301169050919050565b60006107bd8261075b565b6107c78185610766565b93506107d7818560208601610777565b6107e0816107a1565b840191505092915050565b6000602082019050818103600083015261080581846107b2565b905092915050565b6000819050919050565b6108208161080d565b82525050565b600060208201905061083b6000830184610817565b92915050565b7f4f6e6c7920636c69656e742063616e2063616c6c20746869732e000000000000600082015250565b6000610877601a83610766565b915061088282610841565b602082019050919050565b600060208201905081810360008301526108a68161086a565b9050919050565b7f496e76616c69642073746174652e000000000000000000000000000000000000600082015250565b60006108e3600e83610766565b91506108ee826108ad565b602082019050919050565b60006020820190508181036000830152610912816108d6565b905091905056fea2646970667358221220e6abc425206d97e644c60c2b46b51db0edb9fbab380e8fb72fe088d2c317456864736f6c634300081c0033";

const CreateEscrow = () => {
  const [freelancerAddress, setFreelancerAddress] = useState("");
  const [amount, setAmount] = useState("");
  const [newContractAddress, setNewContractAddress] = useState("");
  const [status, setStatus] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!window.ethereum) {
      alert("Please install MetaMask to continue.");
      return;
    }

    try {
      setStatus("Deploying contract...");
      const provider = new ethers.BrowserProvider(window.ethereum);
      const signer = await provider.getSigner();

      const factory = new ethers.ContractFactory(
        EscrowABI,
        ESCROW_BYTECODE,
        signer
      );

      const contract = await factory.deploy(freelancerAddress, {
        value: ethers.parseEther(amount),
      });

      const deployed = await contract.waitForDeployment();
      const address = await deployed.getAddress();

      setNewContractAddress(address);
      setStatus("‚úÖ Contract deployed successfully!");
    } catch (error) {
      console.error("Deployment failed:", error);
      setStatus("‚ùå Deployment failed. See console for details.");
    }
  };

  return (
    <div className="p-6 max-w-xl mx-auto bg-white rounded-lg shadow-md mt-10">
      <h2 className="text-xl font-bold mb-4 text-center">Create Escrow Contract</h2>
      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          type="text"
          placeholder="Freelancer Address"
          value={freelancerAddress}
          onChange={(e) => setFreelancerAddress(e.target.value)}
          className="w-full p-2 border rounded"
          required
        />
        <input
          type="number"
          step="0.01"
          placeholder="Amount in ETH"
          value={amount}
          onChange={(e) => setAmount(e.target.value)}
          className="w-full p-2 border rounded"
          required
        />
        <button
          type="submit"
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 w-full"
        >
          Deploy Contract
        </button>
      </form>

      {status && <p className="mt-4 text-center">{status}</p>}

      {newContractAddress && (
        <div className="mt-4 bg-green-100 p-3 rounded text-center">
          <p>üéâ Contract deployed at:</p>
          <code>{newContractAddress}</code>
        </div>
      )}
    </div>
  );
};

export default CreateEscrow;
